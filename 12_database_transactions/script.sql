-- Write your SQL code here

CREATE PROCEDURE ProcessOrder(
    IN productID INT
)
BEGIN
	-- Start the transaction
START TRANSACTION;

-- Step 2: Unga Group places an order
INSERT INTO `procurement` (`employeeID`, `supplierID`, `productID`, `order_amount`)
VALUES ('EMP001', 'SUP001', 'PROD001', 100);

-- Step 3: Check if suppliers received the order
-- Simulating supplier order reception
SET @supplier_received = TRUE;

IF @supplier_received THEN
    -- Step 4: Suppliers generate the invoice
    INSERT INTO `communication_log` (`communication_log_code`, `details`, `employeeID`, `supplierID`)
    VALUES ('CL001', 'Invoice generated by supplier.', 'EMP001', 'SUP001');

    -- Step 5: Unga Group receives the invoice
    SET @invoice_received = TRUE;

    IF @invoice_received THEN
        -- Step 6: Suppliers begin shipping the product
        INSERT INTO `product_supplied` (`productID`, `supplierID`, `product_name`)
        VALUES ('PROD001', 'SUP001', 'Product Example');

        -- Step 7: Check if Unga Group settles the invoice
        SET @invoice_settled = TRUE;

        IF @invoice_settled THEN
            -- Step 8: Suppliers receive the payment
            UPDATE `supplier_info` SET `supplier_name` = 'Paid' WHERE `supplierID` = 'SUP001';

            -- Step 11: Unga Group receives the product
            UPDATE `product_info` SET `product_available` = 'Yes' WHERE `productID` = 'PROD001';

            -- Step 12: Suppliers archive the order
            INSERT INTO `communication_log` (`communication_log_code`, `details`, `employeeID`, `supplierID`)
            VALUES ('CL002', 'Order archived by supplier.', 'EMP001', 'SUP001');

            -- Step 13: Commit the transaction
            COMMIT;

        ELSE
            -- Step 9: Order is withheld by the supplier
            INSERT INTO `communication_log` (`communication_log_code`, `details`, `employeeID`, `supplierID`)
            VALUES ('CL003', 'Order withheld due to non-payment.', 'EMP001', 'SUP001');

            -- Step 14: Rollback transaction
            ROLLBACK;
        END IF;

    ELSE
        -- Rollback transaction if invoice not received
        ROLLBACK;
    END IF;

ELSE
    -- Rollback transaction if supplier did not receive the order
    ROLLBACK;
END IF;

-- Step 16: Stop the transaction (implicitly completed with COMMIT/ROLLBACK)

END

